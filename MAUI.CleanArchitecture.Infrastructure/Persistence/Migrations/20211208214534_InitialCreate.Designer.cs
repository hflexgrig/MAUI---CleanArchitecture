// <auto-generated />
using MAUI.CleanArchitecture.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MAUI.CleanArchitecture.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20211208214534_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("MAUI.CleanArchitecture.Domain.Entities.Rating", b =>
                {
                    b.Property<long>("StoreRef")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Rate")
                        .HasColumnType("REAL");

                    b.HasKey("StoreRef");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("MAUI.CleanArchitecture.Domain.Entities.StoreItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StoreItems");
                });

            modelBuilder.Entity("MAUI.CleanArchitecture.Domain.Entities.Rating", b =>
                {
                    b.HasOne("MAUI.CleanArchitecture.Domain.Entities.StoreItem", null)
                        .WithOne("Rating")
                        .HasForeignKey("MAUI.CleanArchitecture.Domain.Entities.Rating", "StoreRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MAUI.CleanArchitecture.Domain.Entities.StoreItem", b =>
                {
                    b.Navigation("Rating")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
